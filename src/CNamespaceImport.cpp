/******************************************************************
 * This code was generated by the Astade CppGenerator.            *
 * The generated code is not per se a derivative work of Astade;  *
 * the original copyright to this code is held by the holder(s)   *
 * of the copyright to the underlying model at the time this code *
 * was generated; this code may be distributed under terms of     *
 * his/her/their choice.                                          */
/** an import with namespace
 *  @file CNamespaceImport.cpp
 ******************************************************************/

#include "CNamespaceImport.h"	 // own header



//****** Trace Macros ***************
#ifndef NOTIFY_CONSTRUCTOR
#  define NOTIFY_CONSTRUCTOR(a,b,c)
#endif
#ifndef NOTIFY_DESTRUCTOR
#  define NOTIFY_DESTRUCTOR(a,b)
#endif
#ifndef NOTIFY_FUNCTION_CALL
#  define NOTIFY_FUNCTION_CALL(a,b,c,d,e,f)
#endif
#ifndef NOTIFY_RETURN_VALUE
#  define NOTIFY_RETURN_VALUE(a)
#endif
#ifndef RETURN
#  define RETURN(a) return(a)
#endif

#ifndef LOG
#  define LOG(...)
#endif

doxyqml::CNamespaceImport::CNamespaceImport(const std::string& filename, const std::string& namespaceName) :
	m_filename(filename),
	m_NamespaceName(namespaceName)
{
	NOTIFY_CONSTRUCTOR(5, "CNamespaceImport", "const std::string& filename, const std::string& namespaceName")
//[Package_doxyqml/Package_ast/classes/class_YMCKDJUQ/operations/constructor_ULRYULPG/code.cpp]
	//~~ CNamespaceImport(const std::string& filename, const std::string& namespaceName) [CNamespaceImport] ~~
	size_t pos;
	
	do {
	    pos = m_filename.find("../");
	    if (pos != std::string::npos)
	        m_filename.erase(pos,3);
	} while (pos != std::string::npos);
	
	do {
	    pos = m_filename.find('/');
	    if (pos != std::string::npos)
	    {
	        m_filename.erase(pos,1);
	        m_filename.insert(pos,"::");
	    }
	} while (pos != std::string::npos);
//[EOF]
}

void doxyqml::CNamespaceImport::print() const
{
	NOTIFY_FUNCTION_CALL(this, 5, "CNamespaceImport", "print", "", "void ")
//[Package_doxyqml/Package_ast/classes/class_YMCKDJUQ/operations/operation_PMXQNUAH/code.cpp]
	//~~ void print() [CNamespaceImport] ~~
	printf("namespace %s = %s;\n",m_NamespaceName.c_str(),m_filename.c_str());
//[EOF]
}

